{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview Hanfor h elps an alyzing an d for malizing r equirements. Quickstart Use python 3.6.x install dependencies: pip install -r requirements.txt Copy ./hanfor/config.dist.py to ./hanfor/config.py . Edit the config.py according your needs. Start the app for a fresh session created from input.csv : python app.py <tag> -c path/to/input.csv Point your browser to http://127.0.0.1:<port in config.py> .","title":"Overview"},{"location":"#overview","text":"Hanfor h elps an alyzing an d for malizing r equirements.","title":"Overview"},{"location":"#quickstart","text":"Use python 3.6.x install dependencies: pip install -r requirements.txt Copy ./hanfor/config.dist.py to ./hanfor/config.py . Edit the config.py according your needs. Start the app for a fresh session created from input.csv : python app.py <tag> -c path/to/input.csv Point your browser to http://127.0.0.1:<port in config.py> .","title":"Quickstart"},{"location":"installation/","text":"Installation Preliminaries Hanfor requires Python and is only tested with Python 3.6.x. You can check if you have python already installed from the command line: $ python -- version Python 3.5.2 We recommend using a virtual environment . Create a new virtual environment with: $ virtualenv hanfor_python And activate it by sourcing: $ source hanfor_python/bin/activate Now the python dependencies needed to be installed into the virtual environment. Inside the repository run: pip install -r requirements.txt Configure Copy ./hanfor/config.dist.py to ./hanfor/config.py . Edit the config.py according your needs. Start To start a fresh session use $ python app.py <tag> -c <path_to_input_csv>.csv Point your browser to http://127.0.0.1:<port in config.py> Start an existing session: $ python app.py <tag> You can see all available tags using the ''-L'' switch: $ python app.py -L How it works The app will create a session naming it by the given <tag> argument. A session creation process has the following steps: Create a session in a folder config.py_SESSION_BASE_FOLDER/<tag> . Read the given .csv file containing one requirement each row. Ask the user about a mapping of the csv-header-names for: \"ID\", \"Description\", \"Formalized Requirement\", \"Type\" Create a Hanfor-Requirement for each row in the csv and store it to the session folder. Provide the Web-interface on the port specified in config.py","title":"Installation"},{"location":"installation/#installation","text":"","title":"Installation"},{"location":"installation/#preliminaries","text":"Hanfor requires Python and is only tested with Python 3.6.x. You can check if you have python already installed from the command line: $ python -- version Python 3.5.2 We recommend using a virtual environment . Create a new virtual environment with: $ virtualenv hanfor_python And activate it by sourcing: $ source hanfor_python/bin/activate Now the python dependencies needed to be installed into the virtual environment. Inside the repository run: pip install -r requirements.txt","title":"Preliminaries"},{"location":"installation/#configure","text":"Copy ./hanfor/config.dist.py to ./hanfor/config.py . Edit the config.py according your needs.","title":"Configure"},{"location":"installation/#start","text":"To start a fresh session use $ python app.py <tag> -c <path_to_input_csv>.csv Point your browser to http://127.0.0.1:<port in config.py> Start an existing session: $ python app.py <tag> You can see all available tags using the ''-L'' switch: $ python app.py -L","title":"Start"},{"location":"installation/#how-it-works","text":"The app will create a session naming it by the given <tag> argument. A session creation process has the following steps: Create a session in a folder config.py_SESSION_BASE_FOLDER/<tag> . Read the given .csv file containing one requirement each row. Ask the user about a mapping of the csv-header-names for: \"ID\", \"Description\", \"Formalized Requirement\", \"Type\" Create a Hanfor-Requirement for each row in the csv and store it to the session folder. Provide the Web-interface on the port specified in config.py","title":"How it works"},{"location":"FAQ/usage/","text":"Usage Change the text of Description or field in requirements table. Currently there is only one way to achieve this: \u201cCreating a new revision\u201d: Edit the Description in the CSV -> edited.csv . Create a revision with the edited CSV as baseline: python app.py TAG_NAME -c path/to/edited.csv --revision This will check for changes in the CSV against the old one and create a new \u201cVersion\u201d aka. \u201cRevision\u201d.","title":"Usage"},{"location":"FAQ/usage/#usage","text":"","title":"Usage"},{"location":"FAQ/usage/#change-the-text-of-description-or-field-in-requirements-table","text":"Currently there is only one way to achieve this: \u201cCreating a new revision\u201d: Edit the Description in the CSV -> edited.csv . Create a revision with the edited CSV as baseline: python app.py TAG_NAME -c path/to/edited.csv --revision This will check for changes in the CSV against the old one and create a new \u201cVersion\u201d aka. \u201cRevision\u201d.","title":"Change the text of Description or field in requirements table."}]}